// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Test-data service "users" (1) has an [1;37masync[0m function [1;37mgetUser()[0m which - when used with valid ID - [0;32mresolves[0m as expected [-> check snapshot 1]: > user1 < 1`] = `
Object {
  "currStep": 8,
  "id": "(ID:user1)",
  "learnPath": Array [
    Object {
      "flectionId": "(ID:adjective-flection2)",
      "result": 100,
      "step": 7,
      "wordId": "(ID:word3)",
    },
    Object {
      "flectionId": "(ID:verb-flection4)",
      "result": null,
      "step": 8,
      "wordId": "(ID:word1)",
    },
  ],
  "login": "user1",
  "name": "User 1",
}
`;

exports[`Test-data service "users" (2) has an [1;37masync[0m function [1;37mlistAllUsers()[0m which - when used w/o arguments - [0;32mresolves[0m as expected [-> check snapshot 2]: > all users < 1`] = `
Array [
  Object {
    "currStep": 8,
    "id": "(ID:user1)",
    "learnPath": Array [
      Object {
        "flectionId": "(ID:adjective-flection2)",
        "result": 100,
        "step": 7,
        "wordId": "(ID:word3)",
      },
      Object {
        "flectionId": "(ID:verb-flection4)",
        "result": null,
        "step": 8,
        "wordId": "(ID:word1)",
      },
    ],
    "login": "user1",
    "name": "User 1",
  },
  Object {
    "currStep": 0,
    "id": "(ID:user2)",
    "login": "user2",
    "name": "User 2",
  },
]
`;

exports[`Test-data service "users" (3) has an [1;37masync[0m function [1;37mgetActiveWord()[0m which - when used with valid ID - [0;32mresolves[0m as expected [-> check snapshot 3]: > 1st activeWord of user1 < 1`] = `
Object {
  "id": "(ID:user1-activeWord1)",
  "learnProgress": Array [
    Object {
      "changedAt": null,
      "currGroup": 0,
      "flectionId": "(ID:verb-flection1)",
    },
    Object {
      "changedAt": null,
      "currGroup": 0,
      "flectionId": "(ID:verb-flection2)",
    },
    Object {
      "changedAt": null,
      "currGroup": 0,
      "flectionId": "(ID:verb-flection3)",
    },
    Object {
      "changedAt": null,
      "currGroup": 0,
      "flectionId": "(ID:verb-flection4)",
    },
    Object {
      "changedAt": null,
      "currGroup": 0,
      "flectionId": "(ID:verb-flection5)",
    },
  ],
  "userId": "(ID:user1)",
  "wordId": "(ID:word1)",
}
`;

exports[`Test-data service "users" (4) has an [1;37masync[0m function [1;37mlistAllActiveWordsOfUser()[0m which - when used with valid ID - [0;32mresolves[0m as expected [-> check snapshot 4]: > all active-words of user1 < 1`] = `
Array [
  Object {
    "id": "(ID:user1-activeWord1)",
    "learnProgress": Array [
      Object {
        "changedAt": null,
        "currGroup": 0,
        "flectionId": "(ID:verb-flection1)",
      },
      Object {
        "changedAt": null,
        "currGroup": 0,
        "flectionId": "(ID:verb-flection2)",
      },
      Object {
        "changedAt": null,
        "currGroup": 0,
        "flectionId": "(ID:verb-flection3)",
      },
      Object {
        "changedAt": null,
        "currGroup": 0,
        "flectionId": "(ID:verb-flection4)",
      },
      Object {
        "changedAt": null,
        "currGroup": 0,
        "flectionId": "(ID:verb-flection5)",
      },
    ],
    "userId": "(ID:user1)",
    "wordId": "(ID:word1)",
  },
  Object {
    "id": "(ID:user1-activeWord2)",
    "learnProgress": Array [
      Object {
        "changedAt": null,
        "currGroup": 0,
        "flectionId": "(ID:adjective-flection1)",
      },
      Object {
        "changedAt": null,
        "currGroup": 0,
        "flectionId": "(ID:adjective-flection2)",
      },
      Object {
        "changedAt": null,
        "currGroup": 0,
        "flectionId": "(ID:adjective-flection3)",
      },
      Object {
        "changedAt": null,
        "currGroup": 0,
        "flectionId": "(ID:adjective-flection4)",
      },
      Object {
        "changedAt": null,
        "currGroup": 0,
        "flectionId": "(ID:adjective-flection5)",
      },
      Object {
        "changedAt": null,
        "currGroup": 0,
        "flectionId": "(ID:adjective-flection6)",
      },
    ],
    "userId": "(ID:user1)",
    "wordId": "(ID:word3)",
  },
]
`;
